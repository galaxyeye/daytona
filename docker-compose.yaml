services:
  daytona-all:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "3001:3001"
    volumes:
      - .:/workspaces/daytona
    depends_on:
      - db
      - redis
    networks:
      - daytona-network

  dex:
    image: dexidp/dex:v2.42.0
    ports:
      - "5556:5556"
    volumes:
      - ./config/dex/config.yaml:/etc/dex/config.yaml
      - ./tmp/dex:/tmp
    command: ['dex', 'serve', '/etc/dex/config.yaml']
    networks:
      - daytona-network

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=user
      - POSTGRES_DB=application_ctx
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - daytona-network

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: dev@daytona.io
      PGADMIN_DEFAULT_PASSWORD: pgadmin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    depends_on:
      - db
    networks:
      - daytona-network

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - daytona-network

  registry-ui:
    image: joxit/docker-registry-ui:main
    environment:
      - SINGLE_REGISTRY=true
      - REGISTRY_TITLE=Docker Registry UI
      - DELETE_IMAGES=true
      - SHOW_CONTENT_DIGEST=true
      - NGINX_PROXY_PASS_URL=http://registry:5000
      - SHOW_CATALOG_NB_TAGS=true
      - CATALOG_MIN_BRANCHES=1
      - CATALOG_MAX_BRANCHES=1
      - TAGLIST_PAGE_SIZE=100
      - REGISTRY_SECURED=false
      - CATALOG_ELEMENTS_LIMIT=1000
    depends_on:
      - registry
    networks:
      - daytona-network

  registry:
    image: registry:2.8.2
    environment:
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Origin: '[http://registry-ui:5100]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Methods: '[HEAD,GET,OPTIONS,DELETE]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Credentials: '[true]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Headers: '[Authorization,Accept,Cache-Control]'
      REGISTRY_HTTP_HEADERS_Access-Control-Expose-Headers: '[Docker-Content-Digest]'
      REGISTRY_STORAGE_DELETE_ENABLED: 'true'
    volumes:
      - registry:/var/lib/registry
    networks:
      - daytona-network

  maildev:
    image: maildev/maildev
    networks:
      - daytona-network

  minio:
    image: minio/minio:latest
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_IDENTITY_STS_EXPIRY="24h"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - daytona-network

  jaeger:
    image: jaegertracing/all-in-one:1.67.0
    networks:
      - daytona-network

volumes:
  registry: {}
  minio_data: {}
  postgres_data: {}
  redis_data: {}

networks:
  daytona-network:
    driver: bridge
