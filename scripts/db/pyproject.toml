[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "daytona-db-maintenance"
version = "1.0.0"
authors = [
    { name = "Daytona Platforms Inc.", email = "support@daytona.io"  },
]
description = "Database maintenance tools for Daytona project"
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "psycopg2-binary>=2.9.7",
    "pandas>=2.1.1",
    "redis>=4.6.0",
    "python-dotenv>=1.0.0",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Topic :: Database",
    "Topic :: System :: Systems Administration",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
keywords = ["daytona", "database", "maintenance", "postgresql", "redis"]
license = {text = "Apache-2.0"}

[project.scripts]
daytona-db-maintenance = "data_maintenance:main"
daytona-check-maintenance-config = "check_maintenance_config:main"
daytona-db-init = "init:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
]

[tool.setuptools]
py-modules = ["data_maintenance", "check_maintenance_config", "init", "maintenance_example", "version"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v --tb=short"
